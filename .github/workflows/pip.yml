name: Publish Python üêç distribution üì¶ to PyPI and TestPyPI

on: push

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0  # Ëé∑ÂèñÂÆåÊï¥ÂéÜÂè≤ËÆ∞ÂΩïÔºåÊúâÂä©‰∫éÁâàÊú¨Ê£ÄÊµã
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install pypa/build and dependencies
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: List built distributions
      run: ls -la dist/
    - name: Install project dependencies
      run: pip install .
    - name: Generate SBOM using Syft
      run: |
        pip install syft
        syft packages python:$(which python) -o cyclonedx-json > sbom.json
    - name: Verify SBOM was created
      run: |
        if [ -f "sbom.json" ]; then
          echo "SBOM file created successfully"
          echo "File size: $(wc -l < sbom.json) lines"
        else
          echo "ERROR: SBOM file was not created"
          exit 1
        fi
    - name: Store the distribution packages and SBOM
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: |
          dist/
          sbom.json

  publish-to-pypi:
    name: >-
      Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/flet-sherpa-onnx
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: List downloaded files
      run: find dist/ -type f -name "*"
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/

  create-release:
    name: Create Release with SBOM
    if: startsWith(github.ref, 'refs/tags/')
    needs: 
    - build
    - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed to create releases
      id-token: write
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: release-assets/
        
    - name: Create Release with SBOM
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-assets/sbom.json
          release-assets/dist/*.whl
          release-assets/dist/*.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}