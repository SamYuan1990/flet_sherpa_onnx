name: Release Multi-Platform Build

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
  # 每7天自动构建一次
  schedule:
    - cron: '0 0 */7 * *'
  # PR 触发条件 - 只针对 main 分支
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'

permissions:
  contents: write
  pull-requests: write
  packages: write
  id-token: write
  attestations: write

env:
  PYTHONUTF8: 1
  FLET_CLI_NO_RICH_OUTPUT: 1
  APP_DIR: App
  BUILD_DIR: examples/flet_sherpa_onnx_example

jobs:
  build-apps:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ipa
            runs-on: macos-latest
            flet-platform: ipa
            base-artifact-name: ipa
            artifact-path: build/ipa  # 直接使用路径，不使用 env 变量
          - platform: apk
            runs-on: ubuntu-latest
            flet-platform: apk
            base-artifact-name: apk
            artifact-path: build/apk  # 直接使用路径，不使用 env 变量
          - platform: windows
            runs-on: windows-latest
            flet-platform: windows
            base-artifact-name: windows-app
            artifact-path: build/windows  # 直接使用路径，不使用 env 变量
          - platform: macos-arm
            runs-on: macos-latest
            flet-platform: macos
            base-artifact-name: macos-arm-app
            artifact-path: build/macos/**/*.app  # 直接使用路径，不使用 env 变量
          - platform: macos-x86
            runs-on: macos-13
            flet-platform: macos
            base-artifact-name: macos-x86-app
            artifact-path: build/macos/**/*.app  # 直接使用路径，不使用 env 变量
          - platform: linux
            runs-on: ubuntu-latest
            flet-platform: linux
            base-artifact-name: linux-app
            artifact-path: build/linux  # 直接使用路径，不使用 env 变量
  
    runs-on: ${{ matrix.runs-on }}    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          # 对于schedule触发，使用默认的Python版本
          python-version: ${{ github.event.inputs.python_version || '3.12' }}

      - name: Install platform-specific dependencies
        shell: bash
        run: |
          # Windows不需要特殊依赖
          if [ "${{ matrix.platform }}" = "macos-arm" ] || [ "${{ matrix.platform }}" = "macos-x86" ]; then
            echo "Installing dependencies for macOS..."
            sudo gem install cocoapods -v 1.16.0
          elif [ "${{ matrix.platform }}" = "linux" ]; then
            echo "Installing dependencies for Linux..."
            sudo apt-get update -y
            sudo apt-get install -y ninja-build libgtk-3-dev
            sudo apt-get install -y zenity
          else
            echo "No additional dependencies needed for Windows."
          fi

      - name: Install Python dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --pre 'flet[all]==0.70.0.dev5623'

      - name: Build application with Flet
        shell: bash
        run: |
          # 构建命令根据平台有所不同
          if [ "${{ matrix.platform }}" = "macos-arm" ]; then
            echo "Building macOS ARM app"
            flet build macos ./${{ env.APP_DIR }} --output=${{ env.BUILD_DIR }}/macos -v --arch arm64
          elif [ "${{ matrix.platform }}" = "macos-x86" ]; then
            echo "Building macOS x86_64 app"
            flet build macos ./${{ env.APP_DIR }} --output=${{ env.BUILD_DIR }}/macos -v --arch x86_64
          else
            echo "Building ${{ matrix.platform }} app"
            flet build ${{ matrix.flet-platform }} ./${{ env.APP_DIR }} --output=${{ env.BUILD_DIR }}/${{ matrix.flet-platform }} -v
          fi

      - name: Determine artifact name and retention days
        id: artifact-info
        shell: bash
        run: |
          # 如果是PR触发，在artifact名称中添加PR ID并设置保留时间为1天
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "artifact_name=${{ matrix.base-artifact-name }}-pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
            echo "retention_days=1" >> $GITHUB_OUTPUT
          else
            echo "artifact_name=${{ matrix.base-artifact-name }}" >> $GITHUB_OUTPUT
            echo "retention_days=${{ github.event.inputs.retention_days || 7 }}" >> $GITHUB_OUTPUT
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact-info.outputs.artifact_name }}
          path: ${{ matrix.artifact-path }}
          retention-days: ${{ steps.artifact-info.outputs.retention_days }}
          overwrite: true